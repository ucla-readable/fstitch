diff -Nurd linux-2.6.19.1/block/ll_rw_blk.c linux-2.6.19.1/block/ll_rw_blk.c
--- linux-2.6.19.1/block/ll_rw_blk.c	2006-12-11 11:32:53.000000000 -0800
+++ linux-2.6.19.1/block/ll_rw_blk.c	2007-01-25 14:08:52.000000000 -0800
@@ -2808,8 +2808,10 @@
 	/*
 	 * REQ_BARRIER implies no merging, but lets make it explicit
 	 */
-	if (unlikely(bio_barrier(bio)))
+	if (unlikely(bio_hardbarrier(bio)))
 		req->cmd_flags |= (REQ_HARDBARRIER | REQ_NOMERGE);
+	if (unlikely(bio_softbarrier(bio)))
+		req->cmd_flags |= (REQ_SOFTBARRIER | REQ_NOMERGE);
 
 	if (bio_sync(bio))
 		req->cmd_flags |= REQ_RW_SYNC;
diff -Nurd linux-2.6.19.1/include/linux/bio.h linux-2.6.19.1/include/linux/bio.h
--- linux-2.6.19.1/include/linux/bio.h	2006-12-11 11:32:53.000000000 -0800
+++ linux-2.6.19.1/include/linux/bio.h	2007-01-25 14:07:30.000000000 -0800
@@ -144,12 +144,13 @@
  * bit 3 -- fail fast, don't want low level driver retries
  * bit 4 -- synchronous I/O hint: the block layer will unplug immediately
  */
-#define BIO_RW		0
-#define BIO_RW_AHEAD	1
-#define BIO_RW_BARRIER	2
-#define BIO_RW_FAILFAST	3
-#define BIO_RW_SYNC	4
-#define BIO_RW_META	5
+#define BIO_RW			0
+#define BIO_RW_AHEAD		1
+#define BIO_RW_BARRIER		2
+#define BIO_RW_FAILFAST		3
+#define BIO_RW_SYNC		4
+#define BIO_RW_META		5
+#define BIO_RW_SOFTBARRIER	6
 
 /*
  * upper 16 bits of bi_rw define the io priority of this bio
@@ -176,11 +177,13 @@
 #define bio_sectors(bio)	((bio)->bi_size >> 9)
 #define bio_cur_sectors(bio)	(bio_iovec(bio)->bv_len >> 9)
 #define bio_data(bio)		(page_address(bio_page((bio))) + bio_offset((bio)))
-#define bio_barrier(bio)	((bio)->bi_rw & (1 << BIO_RW_BARRIER))
+#define bio_hardbarrier(bio)	((bio)->bi_rw & (1 << BIO_RW_BARRIER))
 #define bio_sync(bio)		((bio)->bi_rw & (1 << BIO_RW_SYNC))
 #define bio_failfast(bio)	((bio)->bi_rw & (1 << BIO_RW_FAILFAST))
 #define bio_rw_ahead(bio)	((bio)->bi_rw & (1 << BIO_RW_AHEAD))
 #define bio_rw_meta(bio)	((bio)->bi_rw & (1 << BIO_RW_META))
+#define bio_softbarrier(bio)	((bio)->bi_rw & (1 << BIO_RW_SOFTBARRIER))
+#define bio_barrier(bio)	((bio)->bi_rw & ((1 << BIO_RW_BARRIER) | (1 << BIO_RW_SOFTBARRIER)))
 
 /*
  * will die
