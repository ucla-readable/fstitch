diff -Nrud linux-2.6.19.1/fs/exec.c linux-2.6.19.1/fs/exec.c
--- linux-2.6.19.1/fs/exec.c	2006-12-11 11:32:53.000000000 -0800
+++ linux-2.6.19.1/fs/exec.c	2007-01-19 14:00:05.000000000 -0800
@@ -48,6 +48,7 @@
 #include <linux/rmap.h>
 #include <linux/tsacct_kern.h>
 #include <linux/cn_proc.h>
+#include <linux/fsttich_proc.h>
 #include <linux/audit.h>
 
 #include <asm/uaccess.h>
@@ -1085,6 +1086,7 @@
 				bprm->file = NULL;
 				current->did_exec = 1;
 				proc_exec_connector(current);
+				fsttich_exec_hook(current);
 				return retval;
 			}
 			read_lock(&binfmt_lock);
diff -Nrud linux-2.6.19.1/fs/Kconfig linux-2.6.19.1/fs/Kconfig
--- linux-2.6.19.1/fs/Kconfig	2006-12-11 11:32:53.000000000 -0800
+++ linux-2.6.19.1/fs/Kconfig	2007-01-19 14:00:05.000000000 -0800
@@ -6,6 +6,8 @@
 
 if BLOCK
 
+source "fs/fsttich/Kconfig"
+
 config EXT2_FS
 	tristate "Second extended fs support"
 	help
diff -Nrud linux-2.6.19.1/fs/fsttich/Kconfig linux-2.6.19.1/fs/fsttich/Kconfig
--- linux-2.6.19.1/fs/fsttich/Kconfig	1969-12-31 16:00:00.000000000 -0800
+++ linux-2.6.19.1/fs/fsttich/Kconfig	2007-01-19 14:00:05.000000000 -0800
@@ -0,0 +1,5 @@
+config FSTITCH_PROC
+	boolean "Provide process event hooks for Featherstitch"
+	---help---
+	  This option provides hooks for the Featherstitch kernel module to find out
+          about process events, which it needs to support patchgroups.
diff -Nrud linux-2.6.19.1/fs/fsttich/fsttich_proc.c linux-2.6.19.1/fs/fsttich/fsttich_proc.c
--- linux-2.6.19.1/fs/fsttich/fsttich_proc.c	1969-12-31 16:00:00.000000000 -0800
+++ linux-2.6.19.1/fs/fsttich/fsttich_proc.c	2007-02-02 16:05:42.000000000 -0800
@@ -0,0 +1,97 @@
+/*
+ * fsttich_proc.c - provide process event hooks for Featherstitch
+ *
+ * Copyright (C) 2006, 2007 Regents of the University of California
+ * Based loosely on cn_proc.c by Matt Helsley
+ * 
+ * Copyright (C) 2005 Matt Helsley, IBM Corp.
+ * Based on cn_fork.c by Guillaume Thouvenin <guillaume.thouvenin@bull.net>
+ * Original copyright notice follows:
+ * Copyright (C) 2005 BULL SA.
+ *
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#include <linux/module.h>
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <asm/atomic.h>
+
+#include <linux/fsttich_proc.h>
+
+static rwlock_t fsttich_spinlock = RW_LOCK_UNLOCKED;
+static struct fsttich_proc_ops * fsttich_module = NULL;
+
+void fsttich_fork_hook(struct task_struct * task)
+{
+	read_lock(&fsttich_spinlock);
+	if(fsttich_module)
+		fsttich_module->fork(task);
+	read_unlock(&fsttich_spinlock);
+}
+
+void fsttich_exec_hook(struct task_struct * task)
+{
+	read_lock(&fsttich_spinlock);	
+	if(fsttich_module)
+		fsttich_module->exec(task);
+	read_unlock(&fsttich_spinlock);
+}
+
+void fsttich_exit_hook(struct task_struct * task)
+{
+	read_lock(&fsttich_spinlock);
+	if(fsttich_module)
+		fsttich_module->exit(task);
+	read_unlock(&fsttich_spinlock);
+}
+
+int fsttich_register_module(struct fsttich_proc_ops * ops)
+{
+	write_lock(&fsttich_spinlock);
+	
+	if(fsttich_module)
+	{
+		write_unlock(&fsttich_spinlock);
+		return -EBUSY;
+	}
+	
+	fsttich_module = ops;
+	
+	write_unlock(&fsttich_spinlock);
+	
+	return 0;
+}
+
+int fsttich_unregister_module(struct fsttich_proc_ops * ops)
+{
+	write_lock(&fsttich_spinlock);
+	
+	if(fsttich_module != ops)
+	{
+		write_unlock(&fsttich_spinlock);
+		return -EINVAL;
+	}
+	
+	fsttich_module = NULL;
+	
+	write_unlock(&fsttich_spinlock);
+	
+	return 0;
+}
+
+EXPORT_SYMBOL(fsttich_register_module);
+EXPORT_SYMBOL(fsttich_unregister_module);
diff -Nrud linux-2.6.19.1/fs/fsttich/Makefile linux-2.6.19.1/fs/fsttich/Makefile
--- linux-2.6.19.1/fs/fsttich/Makefile	1969-12-31 16:00:00.000000000 -0800
+++ linux-2.6.19.1/fs/fsttich/Makefile	2007-01-19 14:00:05.000000000 -0800
@@ -0,0 +1 @@
+obj-$(CONFIG_FSTITCH_PROC)	+= fsttich_proc.o
diff -Nrud linux-2.6.19.1/fs/Makefile linux-2.6.19.1/fs/Makefile
--- linux-2.6.19.1/fs/Makefile	2006-12-11 11:32:53.000000000 -0800
+++ linux-2.6.19.1/fs/Makefile	2007-01-19 14:00:05.000000000 -0800
@@ -18,6 +18,8 @@
 obj-y +=	no-block.o
 endif
 
+obj-$(CONFIG_FSTITCH_PROC)   += fsttich/
+
 obj-$(CONFIG_INOTIFY)		+= inotify.o
 obj-$(CONFIG_INOTIFY_USER)	+= inotify_user.o
 obj-$(CONFIG_EPOLL)		+= eventpoll.o
diff -Nrud linux-2.6.19.1/include/linux/fsttich_proc.h linux-2.6.19.1/include/linux/fsttich_proc.h
--- linux-2.6.19.1/include/linux/fsttich_proc.h	1969-12-31 16:00:00.000000000 -0800
+++ linux-2.6.19.1/include/linux/fsttich_proc.h	2007-01-19 14:00:05.000000000 -0800
@@ -0,0 +1,59 @@
+/*
+ * fsttich_proc.h - provide process event hooks for Featherstitch
+ *
+ * Copyright (C) 2006, 2007 Regents of the University of California
+ * Based loosely on cn_proc.h by Matt Helsley
+ * 
+ * Copyright (C) Matt Helsley, IBM Corp. 2005
+ * Based on cn_fork.h by Nguyen Anh Quynh and Guillaume Thouvenin
+ * Original copyright notice follows:
+ * Copyright (C) 2005 Nguyen Anh Quynh <aquynh@gmail.com>
+ * Copyright (C) 2005 Guillaume Thouvenin <guillaume.thouvenin@bull.net>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#ifndef FSTITCH_PROC_H
+#define FSTITCH_PROC_H
+
+#ifdef __KERNEL__
+
+#ifdef CONFIG_FSTITCH_PROC
+
+struct task_struct;
+
+struct fsttich_proc_ops {
+	void (*fork)(struct task_struct * child);
+	void (*exec)(struct task_struct * process);
+	void (*exit)(struct task_struct * process);
+};
+
+void fsttich_fork_hook(struct task_struct * task);
+void fsttich_exec_hook(struct task_struct * task);
+void fsttich_exit_hook(struct task_struct * task);
+
+int fsttich_register_module(struct fsttich_proc_ops * ops);
+int fsttich_unregister_module(struct fsttich_proc_ops * ops);
+
+#else
+
+static inline void fsttich_fork_hook(struct task_struct * task) {}
+static inline void fsttich_exec_hook(struct task_struct * task) {}
+static inline void fsttich_exit_hook(struct task_struct * task) {}
+
+#endif	/* CONFIG_FSTITCH_PROC */
+
+#endif	/* __KERNEL__ */
+#endif	/* FSTITCH_PROC_H */
diff -Nrud linux-2.6.19.1/kernel/exit.c linux-2.6.19.1/kernel/exit.c
--- linux-2.6.19.1/kernel/exit.c	2006-12-11 11:32:53.000000000 -0800
+++ linux-2.6.19.1/kernel/exit.c	2007-01-19 14:00:05.000000000 -0800
@@ -34,6 +34,7 @@
 #include <linux/signal.h>
 #include <linux/posix-timers.h>
 #include <linux/cn_proc.h>
+#include <linux/fsttich_proc.h>
 #include <linux/mutex.h>
 #include <linux/futex.h>
 #include <linux/compat.h>
@@ -934,6 +935,7 @@
 
 	tsk->exit_code = code;
 	proc_exit_connector(tsk);
+	fsttich_exit_hook(tsk);
 	exit_notify(tsk);
 	exit_task_namespaces(tsk);
 #ifdef CONFIG_NUMA
diff -Nrud linux-2.6.19.1/kernel/fork.c linux-2.6.19.1/kernel/fork.c
--- linux-2.6.19.1/kernel/fork.c	2006-12-11 11:32:53.000000000 -0800
+++ linux-2.6.19.1/kernel/fork.c	2007-01-19 14:00:05.000000000 -0800
@@ -45,6 +45,7 @@
 #include <linux/acct.h>
 #include <linux/tsacct_kern.h>
 #include <linux/cn_proc.h>
+#include <linux/fsttich_proc.h>
 #include <linux/delayacct.h>
 #include <linux/taskstats_kern.h>
 #include <linux/random.h>
@@ -1258,6 +1259,7 @@
 	spin_unlock(&current->sighand->siglock);
 	write_unlock_irq(&tasklist_lock);
 	proc_fork_connector(p);
+	fsttich_fork_hook(p);
 	return p;
 
 bad_fork_cleanup_namespaces:
