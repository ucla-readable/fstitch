OBJDIRS += util
BIN += $(UTILDIR)/bdsplit $(UTILDIR)/check_writes $(UTILDIR)/fsck.jos $(UTILDIR)/mkfs.jos $(UTILDIR)/fsck.waffle $(UTILDIR)/mkfs.waffle $(UTILDIR)/fsync $(UTILDIR)/fdb
ifeq ($(OBJDIR),$(BASE_OBJDIR)/kernel)
BIN += $(UTILDIR)/testpatchgroup $(UTILDIR)/txn
endif

$(UTILDIR)/bdsplit: util/bdsplit.c
	@echo + cc[UTIL] $<
	$(V)mkdir -p $(@D)
	$(V)$(CC) $(CFLAGS) -o $@ $<

$(UTILDIR)/check_writes: util/check_writes.c fscore/linux_bd_debug.h
	@echo + cc[UTIL] $<
	@mkdir -p $(@D)
	$(V)$(CC) $(CFLAGS) -I. -o $@ $<

$(UTILDIR)/%.jos: util/%.jos.c modules/josfs_lfs.h
	@echo + cc[UTIL] $<
	$(V)mkdir -p $(@D)
	$(V)$(CC) $(CFLAGS) -I. -o $@ $<

$(UTILDIR)/%.waffle: util/%.waffle.c modules/waffle.h
	@echo + cc[UTIL] $<
	$(V)mkdir -p $(@D)
	$(V)$(CC) $(CFLAGS) -I. -o $@ $<

$(UTILDIR)/fsync: util/fsync.c
	@echo + cc[UTIL] $<
	$(V)mkdir -p $(@D)
	$(V)$(CC) -DKERNEL_USER -I. $(CFLAGS) -o $@ $<

$(UTILDIR)/testpatchgroup: util/testpatchgroup.c $(OBJDIR)/lib/libpatchgroup.so
	@echo + cc[UTIL] $<
	$(V)mkdir -p $(@D)
	$(V)$(CC) $(CFLAGS) -I. -o $@ $< -L$(OBJDIR)/lib -lpatchgroup

$(UTILDIR)/txn: util/txn.c $(OBJDIR)/lib/libpatchgroup.so
	@echo + cc[UTIL] $<
	$(V)mkdir -p $(@D)
	$(V)$(CC) $(CFLAGS) -I. -o $@ $< -L$(OBJDIR)/lib -lpatchgroup

GTKFLAGS:=$(shell pkg-config gtk+-2.0 --cflags --libs)

RLFLAGS=
SYSTEM:=$(shell uname -s)
ifeq ($(SYSTEM),Darwin)
# We assume Fink on OS X
RLFLAGS+=-I/sw/include -bind_at_load
endif

$(UTILDIR)/fdb: util/fdb.c fscore/debug_opcode.h fscore/patch.h fscore/bdesc.h
	@echo + cc[UTIL] $<
	$(V)mkdir -p $(@D)
	$(V)$(CC) $(CFLAGS) -I. -o $@ $< $(GTKFLAGS) $(RLFLAGS) -lreadline -ltermcap -lm
