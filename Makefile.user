# unix-user KFS Makefile

BASE_OBJDIR := obj
OBJDIR := $(BASE_OBJDIR)/unix-user
UTILDIR := $(BASE_OBJDIR)/util

V = @

BIN =

# Commands
CC	= gcc $(CC_VER) -pipe
AR	= ar
TAR	= tar
PERL	= perl
CTAGS	= ctags

# Command flags
CFLAGS	= -Wall -std=gnu99
CTAGSFLAGS = --extra=+q --langmap=make:+\(Makefile\)\(Makefile.user\).mk

# Compiler flags
CFLAGS	+= $(DEFS) -I. -MD -g -DUNIXUSER
CFLAGS	+= -O2 -march=pentium3

ifneq ($(NDEBUG),)
CFLAGS += -DNDEBUG=$(NDEBUG)
endif

# Lists that the */UUMakefrag makefile fragments will add to
OBJDIRS =

# Make sure that 'all' is the first target
all: tags TAGS

# Eliminate default suffix rules
.SUFFIXES:

# Delete target files if there is an error (or make is interrupted)
.DELETE_ON_ERROR:

# make it so that no intermediate .o files are never deleted
.PRECIOUS: %.o \
	$(OBJDIR)/lib/%.o $(OBJDIR)/kfs/%.o $(OBJDIR)/fs/%.o $(OBJDIR)/user/%.o

$(OBJDIR)/lib/%.o: lib/%.c
	@echo + cc[LIB] $<
	@mkdir -p $(@D)
	$(V)$(CC) $(CFLAGS) -c -o $@ $<

FUSE_CFLAGS := $(shell pkg-config fuse --cflags) -DFUSE_USE_VERSION=25
FUSE_LDFLAGS := $(shell pkg-config fuse --libs)

$(OBJDIR)/kfs/%.o: kfs/%.c
	@echo + cc[KFS] $<
	@mkdir -p $(@D)
	$(V)$(CC) -DKFSD $(CFLAGS) $(FUSE_CFLAGS) -c -o $@ $<

# Include [UU]Makefrags for subdirectories
include fs/Makefrag
include lib/UUMakefrag
include kfs/UUMakefrag
include util/Makefrag

# Build vi/emacs tag files
# thetags - for if your source does not build
thetags::
	@echo + ctags [vi]
	$(V)find . -type f \
		| grep -v ./obj/ | grep -v ~$ | grep -v ./TAGS | grep -v ./tags \
		| $(CTAGS) $(CTAGSFLAGS) -L -
	@echo + ctags [emacs]
	$(V)find . -type f \
		| grep -v ./obj/ | grep -v ~$ | grep -v ./TAGS | grep -v ./tags \
		| $(CTAGS) $(CTAGSFLAGS) -L - -e
# TODO: can we give these targets more correct dependencies
TAGDEPS := $(BIN)
tags: $(TAGDEPS)
	@echo + ctags [vi]
	$(V)find . -type f \
		| grep -v ./obj/ | grep -v ~$ | grep -v ./TAGS | grep -v ./tags \
		| $(CTAGS) $(CTAGSFLAGS) -L -
TAGS: $(TAGDEPS)
	@echo + ctags [emacs]
	$(V)find . -type f \
		| grep -v ./obj/ | grep -v ~$ | grep -v ./TAGS | grep -v ./tags \
		| $(CTAGS) $(CTAGSFLAGS) -L - -e

# For deleting the build
fsclean:
	rm -f $(BASE_OBJDIR)/fs/ufs.img $(BASE_OBJDIR)/fs/ext2.img 

clean:
	rm -rf $(OBJDIR) tags TAGS Module.symvers

# This magic automatically generates makefile dependencies
# for header files included from C source files we compile,
# and keeps those dependencies up-to-date every time we recompile.
# See 'mergedep.pl' for more information.
$(OBJDIR)/.deps: $(foreach dir, $(OBJDIRS), $(wildcard $(OBJDIR)/$(dir)/*.d))
	@mkdir -p $(@D)
	@$(PERL) util/mergedep.pl $@ $^

-include $(OBJDIR)/.deps

always:
	@:

.PHONY: all always clean
