#!/bin/bash

BENCHDIR="`dirname "$0"`"
. $BENCHDIR/common
KUDOSDIR="$BENCHDIR/.."

VMLINUX=/lib/modules/`uname -r`/source/vmlinux

function usage () {
	echo "About: start and stop a file system" 
	echo "Usage: `basename "$0"` <-a start|stop> [-h HOST] [-f FS] [-k]"
	echo "       where HOST-FS may be kudos-ext2, linux-ext2, or linux-ext3"
	echo "           default is kudos-ext2"
	echo "       -k keeps the existing file system"
	echo "           default is to format at start"
}

FS=ext2
HOST=kudos
FORMAT=1
ACTION=

while getopts "a:f:h:k" flag; do
	case "$flag" in
		a) ACTION="$OPTARG";;
		f) FS="$OPTARG";;
		h) HOST="$OPTARG";;
		k) FORMAT=0;;
		\?) usage 1>&2; exit 1;;
		*) usage 1>&2; exit 1;;
	esac
done

if [ "$ACTION" != "start" ] && [ "$ACTION" != "stop" ]; then
	echo "Illegal action" 1>&2
	usage 1>&2
	exit 1
fi

if ! supported_host_fs "${HOST}-${FS}"; then
	echo "Unsupported host-filesystem pair \"${HOST}-${FS}\"" 1>&2
	exit 1
fi

DEV=
PART=
if [ "$HOST" == "kudos" ] || [ "$HOST" == "linux" ]; then
	DEV=${DEV:-/dev/sdb}
	PART=${DEV}${PART:-1}
elif [ "$HOST" == "uu" ]; then
	DEV=${DEV:-$KUDOSDIR/obj/fs/ext2.img}
	PART=${DEV}${PART:-}
fi

# Try to load oprofile, then detect whether it worked
zgrep -q OPROFILE /proc/config.gz && sudo modprobe oprofile
PROFILE=`lsmod | grep -q ^oprofile && echo 1 || echo 0`

if [ "$ACTION" == "start" ]; then
	sync
	if [ "$HOST" == "kudos" ]; then
		[ $FORMAT -eq 1 ] && try sudo mkfs.$FS $PART
		if [ "$NWBBLOCKS" == "" ]; then
			try sudo insmod $KUDOSDIR/kfs/kkfsd.ko linux_device=$DEV
		else
			try sudo insmod $KUDOSDIR/kfs/kkfsd.ko linux_device=$DEV nwbblocks="$NWBBLOCKS"
		fi
		try sudo mount -t kfs $KMNT $MNT
		try sudo chmod 777 $MNT
	elif [ "$HOST" == "uu" ]; then
		[ $FORMAT -eq 1 ] && try make -f Makefile.user fsclean all
		if [ "$NWBBLOCKS" == "" ]; then
			try $KUDOSDIR/uukfsd.sh unix_file=$DEV $MNT &
		else
			try $KUDOSDIR/uukfsd.sh unix_file=$DEV nwbblocks="$NWBBLOCKS" $MNT &
		fi
	else
		[ $FORMAT -eq 1 ] && try sudo mkfs.$FS $PART
		try sudo mount -t $FS $PART $MNT
		try sudo chmod 777 $MNT
	fi
	sleep 1 # give kfsd time to init

	if [ $PROFILE -eq 1 ] && ([ "$HOST" == "kudos" ] || [ "$HOST" == "linux"]); then
		if [ ! $VMLINUX ]; then
			echo "vmlinux \"$VMLINUX\" does not exist, cannot profile" 1>&2
			exit 1
		fi
		try sudo opcontrol --init
		try sudo opcontrol --setup --separate=kernel --vmlinux=$VMLINUX
		try sudo opcontrol --start
		try sudo opcontrol --reset
	fi
elif [ "$ACTION" == "stop" ]; then
	if [ "$HOST" == "uu" ]; then
		killall kfsd # TODO: kill just the started kfsd
	else
		if [ $PROFILE -eq 1 ]; then
			try sudo opcontrol --stop
			try sudo opcontrol --dump
		fi
		try sudo umount $MNT
		if [ "$HOST" == "kudos" ]; then try sudo rmmod kkfsd; fi
	fi
else
	echo "Unknown action \"$1\"" 1>&2
	exit 1
fi
