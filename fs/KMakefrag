
OBJDIRS += fs

USERAPPS :=		$(OBJDIR)/user/bless \
			$(OBJDIR)/user/cat \
			$(OBJDIR)/user/clock \
			$(OBJDIR)/user/demo \
			$(OBJDIR)/user/depend \
			$(OBJDIR)/user/df \
			$(OBJDIR)/user/echo \
			$(OBJDIR)/user/es \
			$(OBJDIR)/user/ex \
			$(OBJDIR)/user/fourem \
			$(OBJDIR)/user/free \
			$(OBJDIR)/user/get \
			$(OBJDIR)/user/grep \
			$(OBJDIR)/user/hexdump \
			$(OBJDIR)/user/host \
			$(OBJDIR)/user/ifdown \
			$(OBJDIR)/user/ifup \
			$(OBJDIR)/user/init \
			$(OBJDIR)/user/int3 \
			$(OBJDIR)/user/josweb \
			$(OBJDIR)/user/journal \
	 		$(OBJDIR)/kern/kernel \
			$(OBJDIR)/user/kfsgraph \
			$(OBJDIR)/user/kgpm \
			$(OBJDIR)/user/knbdd \
			$(OBJDIR)/user/ls \
			$(OBJDIR)/user/lsfd \
			$(OBJDIR)/user/maddec \
			$(OBJDIR)/user/mario \
			$(OBJDIR)/user/md5sum \
			$(OBJDIR)/user/mirror \
			$(OBJDIR)/user/mkdir \
			$(OBJDIR)/user/mkjosfs \
			$(OBJDIR)/user/more \
			$(OBJDIR)/user/mount \
			$(OBJDIR)/user/moused \
			$(OBJDIR)/user/mv \
			$(OBJDIR)/user/netstats \
			$(OBJDIR)/user/null \
			$(OBJDIR)/user/reboot \
			$(OBJDIR)/user/rm \
			$(OBJDIR)/user/rmdir \
			$(OBJDIR)/user/sb16 \
			$(OBJDIR)/user/sh \
			$(OBJDIR)/user/shoot \
			$(OBJDIR)/user/sleep \
			$(OBJDIR)/user/sync \
			$(OBJDIR)/user/telnet \
			$(OBJDIR)/user/telnetd \
			$(OBJDIR)/user/test_kfs_perf \
			$(OBJDIR)/user/testkpl \
			$(OBJDIR)/user/testopgroup \
 			$(OBJDIR)/user/umount \
			$(OBJDIR)/user/uptime \
			$(OBJDIR)/user/volume

FSIMGTXTFILES :=	fs/.journal \
			fs/404.html \
			fs/bomb.img \
			fs/favicon.ico \
			fs/foo.mp3 \
			fs/goomba.spr \
			fs/index.html \
			fs/indy.0 \
			fs/init.sh \
			fs/kbear.jpg \
			fs/kfsgraphviz.sh \
			fs/kudos.0 \
			fs/lady.img \
			fs/lady.jpeg \
			fs/lady.pal \
			fs/lorem \
			fs/mario.pal \
			fs/mario.spr \
			fs/motd \
			fs/winamp.0

-include fs/audio/Makefrag

FSIMGFILES := $(FSIMGTXTFILES) $(USERAPPS)

include conf/fs.mk
ifndef FSSIZE
	FSINUSE := \`du -slLc --block-size=4096 $(OBJDIR)/kern/kernel $(FSIMGFILES) | grep total$$ | awk '{print $$1}'\`
	FSSIZE := `echo $$((($(FSINUSE) + 255) / 256 + $(FSFREE)))`
endif

$(OBJDIR)/fs/clean-fs.img: $(UTILDIR)/$(FSFORMAT) $(FSIMGFILES) $(OBJDIR)/boot/boot $(OBJDIR)/boot/stage2
	@echo + mk $(OBJDIR)/fs/clean-fs.img \($(FSSIZE)M\)
	$(V)mkdir -p $(@D)
	$(V)dd if=/dev/zero of=$(OBJDIR)/fs/clean-fs.img bs=1M count=$(FSSIZE) 2>/dev/null
	$(V)$(UTILDIR)/$(FSFORMAT) $(OBJDIR)/fs/clean-fs.img $(FSIMGFILES)
	$(V)dd if=$(OBJDIR)/boot/boot of=$(OBJDIR)/fs/clean-fs.img conv=notrunc 2>/dev/null
	$(V)dd if=$(OBJDIR)/boot/stage2 of=$(OBJDIR)/fs/clean-fs.img seek=1 count=7 conv=notrunc 2>/dev/null

$(OBJDIR)/fs/fs.img: $(OBJDIR)/boot/mbr $(OBJDIR)/fs/clean-fs.img
	@echo + mk $(OBJDIR)/fs/fs.img
	$(V)cp $(OBJDIR)/boot/mbr $@
	$(V)dd if=$(OBJDIR)/fs/clean-fs.img of=$@ seek=1 conv=notrunc 2> /dev/null

# ufs.img is largely a sparse file.
# Use GNU cp to create ufs.img and let the OS know about its holes:
$(OBJDIR)/fs/ufs.img: fs/ufs-clean.img.gz
	@echo + mk $(OBJDIR)/fs/ufs.img
	$(V)[ ! -f $(OBJDIR)/fs/ufs.img.fifo ] || rm -f $(OBJDIR)/fs/ufs.img.fifo
	$(V)mkfifo $(OBJDIR)/fs/ufs.img.fifo
	$(V)gunzip -c fs/ufs-clean.img.gz > $(OBJDIR)/fs/ufs.img.fifo &
	$(V)cp --sparse=always $(OBJDIR)/fs/ufs.img.fifo $(OBJDIR)/fs/ufs.img
	$(V)rm -f $(OBJDIR)/fs/ufs.img.fifo

fs/.journal:
	@echo + dd if=/dev/zero of=fs/.journal
	$(V)dd if=/dev/zero of=fs/.journal bs=1M count=4 2>/dev/null

all: $(OBJDIR)/fs/fs.img

#all: $(addsuffix .sym, $(USERAPPS))

#all: $(addsuffix .asm, $(USERAPPS))
